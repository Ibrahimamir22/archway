# Generated by Django 5.1.6 on 2025-04-13 18:12

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NewsletterSubscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('confirmed', models.BooleanField(default=False)),
                ('confirmation_token', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('is_active', models.BooleanField(default=True)),
                ('language_preference', models.CharField(choices=[('en', 'English'), ('ar', 'Arabic')], default='en', max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Newsletter Subscription',
                'verbose_name_plural': 'Newsletter Subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('type', models.CharField(choices=[('welcome', 'Welcome Email'), ('confirmation', 'Confirmation Email'), ('newsletter', 'Regular Newsletter'), ('announcement', 'Announcement'), ('promotional', 'Promotional'), ('digest', 'Weekly/Monthly Digest'), ('event', 'Event Invitation'), ('custom', 'Custom')], max_length=20)),
                ('subject_en', models.CharField(max_length=200, verbose_name='Subject (English)')),
                ('subject_ar', models.CharField(blank=True, max_length=200, verbose_name='Subject (Arabic)')),
                ('content_en', models.TextField(verbose_name='Content (English)')),
                ('content_ar', models.TextField(blank=True, verbose_name='Content (Arabic)')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Newsletter Template',
                'verbose_name_plural': 'Newsletter Templates',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='SubscriberSegment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subscriber Segment',
                'verbose_name_plural': 'Subscriber Segments',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterCampaign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('sent', 'Sent'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_recipients', models.PositiveIntegerField(default=0)),
                ('successful_deliveries', models.PositiveIntegerField(default=0)),
                ('opens', models.PositiveIntegerField(default=0)),
                ('clicks', models.PositiveIntegerField(default=0)),
                ('bounces', models.PositiveIntegerField(default=0)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='campaigns', to='newsletter.newslettertemplate')),
                ('segments', models.ManyToManyField(blank=True, related_name='campaigns', to='newsletter.subscribersegment')),
            ],
            options={
                'verbose_name': 'Newsletter Campaign',
                'verbose_name_plural': 'Newsletter Campaigns',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubscriberSegmentMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('segment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to='newsletter.subscribersegment')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segment_memberships', to='newsletter.newslettersubscription')),
            ],
            options={
                'verbose_name': 'Segment Membership',
                'verbose_name_plural': 'Segment Memberships',
                'unique_together': {('subscriber', 'segment')},
            },
        ),
    ]
