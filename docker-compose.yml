version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:8000/api/v1
      - NEXT_TELEMETRY_DISABLED=1
      - HOSTNAME=0.0.0.0
      - PORT=3000
      - WATCHPACK_POLLING=true
    depends_on:
      - backend
    networks:
      - archway-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    environment:
      - DEBUG=True
      - SECRET_KEY=dev_secret_key_change_in_production
      - CORS_ALLOWED_ORIGINS=http://frontend:3000,http://localhost:3000
    depends_on:
      - db
    networks:
      - archway-network
    restart: unless-stopped

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - archway-network
    restart: unless-stopped

networks:
  archway-network:
    driver: bridge

volumes:
  postgres_data: 